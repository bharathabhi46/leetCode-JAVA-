/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        if(root == null){
            return res;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        q.add(null);
        TreeNode lastNode = null;
        while(!q.isEmpty()){
            TreeNode cur = q.remove();
            if(cur == null){
                if(lastNode!=null){
                    res.add(lastNode.val);
                }
                if(!q.isEmpty()){
                    q.add(null);
                }
            }else{
                lastNode = cur;
                if(cur.left!=null) q.add(cur.right);
                if(cur.right!=null) q.add(cur.left);
            }
        }
        return res;
    }
}
