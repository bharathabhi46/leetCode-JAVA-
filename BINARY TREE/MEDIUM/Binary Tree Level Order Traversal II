/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
         List<List<Integer>> res = new ArrayList<>();
         if(root==null){
            return res;
        }
        Queue<TreeNode> q = new LinkedList<>();
        List<Integer> l = new ArrayList<>();
        q.add(root);
        q.add(null);
         while(!q.isEmpty()){
            TreeNode curNode = q.remove();
            if(curNode==null){
                res.addFirst(new ArrayList<>(l));
                l.clear();
                if(q.isEmpty()){
                    break;
                }else{
                    q.add(null);
                }
            }else{
                l.add(curNode.val);
                if(curNode.left!=null){
                    q.add(curNode.left);
                }
                if(curNode.right!=null){
                    q.add(curNode.right);
                }
            }
         }
        return res;
    }
}
