class Solution {
    class Node{
        int data;
        Node next;
        Node(int data){
            this.data = data;
            this.next = null;
        }
    }
    class Stack{
        Node head = null;
        public boolean isEmpty(){
            return head == null;
        }
        public void add(int data){
            Node newNode = new Node(data);
            if(isEmpty()){
                head = newNode;
                return;
            }
            newNode.next = head;
            head = newNode;
        }
        public void remove(){
            if(isEmpty()){
                return;
            }
            head = head.next;
        }
        public int peek(){
            if(isEmpty()){
                return -1;
            }
            return head.data;
        }
    }
    public int[] nextGreaterElements(int[] nums) {
        Stack sta = new Stack();
        int n = nums.length;
        int res[] = new int[n];
        for(int i = 2*n-1;i>=0;i--){
            int cur = i%n;
            while(!sta.isEmpty() && sta.peek()<=nums[cur]){
                sta.remove();
            }
           if(i<n){
             if(sta.isEmpty()){
                res[cur] = -1;
            }else{
                res[cur] = sta.peek();
            }
           }
            sta.add(nums[cur]);
        }
        return res;
    }
}
