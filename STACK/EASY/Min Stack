// class MinStack {

//     public MinStack() {
        
//     }
    
//     public void push(int val) {
        
//     }
    
//     public void pop() {
        
//     }
    
//     public int top() {
        
//     }
    
//     public int getMin() {
        
//     }
// }
class MinStack {
    Stack<Integer> s1 = new Stack<>();
    Stack<Integer> s2 = new Stack<>();
    public void push(int val) {
       s1.push(val);
       if(s2.isEmpty()){
           s2.push(val);
       }else{
           int top = s2.peek();
           if(val<=top){
               s2.push(val);
           }
       }
    }

    public void pop() {
        if(!s1.isEmpty()){
            int top = s1.pop();
            if(top == s2.peek()){
                s2.pop();
            }
        }
    }

    public int top() {
        if(!s1.isEmpty()){
            return s1.peek();
        }else{
            return -1;
        }
    }

    public int getMin() {
        if(!s2.isEmpty()){
            return s2.peek();
        }else{
            return -1;
        }
    }
}


/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
