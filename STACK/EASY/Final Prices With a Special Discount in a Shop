class Solution {
    class Node{
        int data;
        Node next;
        Node(int data){
            this.data = data;
            this.next = null;
        }
    }
    class Stack{
        Node head = null;
        public boolean isEmpty(){
            return head == null;
        }
        public void add(int data){
            Node newNode = new Node(data);
            if(isEmpty()){
                head = newNode;
                return;
            }
            newNode.next = head;
            head = newNode;
        }
        public void remove(){
            if(isEmpty()){
                return;
            }
            head = head.next;
        }
        public int peek(){
            if(isEmpty()){
                return -1;
            }
            return head.data;
        }
    }
    public int[] finalPrices(int[] prices) {
        Stack sta = new Stack();
        int n = prices.length;
        int re[] = new int[n];
        for(int i=n-1;i>=0;i--){
            int cur = prices[i];
            while(!sta.isEmpty() && sta.peek()>cur){
                sta.remove();
            }
            if(sta.isEmpty()){
                re[i] = prices[i];
            }else{
                re[i] = Math.abs(sta.peek()-prices[i]);
            }
            sta.add(cur);
        }
        return re;
    }
}
