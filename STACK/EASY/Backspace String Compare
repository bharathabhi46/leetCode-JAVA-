class Solution {
    static class Node{
        char data;
        Node next;
        Node(char data){
            this.data = data;
            this.next = null;
        }
    }
    static class Stack{
        Node head = null;
        public boolean isEmpty(){
            return head==null;
        }
        public void add(char data){
            Node newNode = new Node(data);
            newNode.next = head;
            head = newNode;
        }
        public void remove(){
            if(!isEmpty()){
                head = head.next;
            }
        }
        public char peek(){
            return head.data;
        }
    }
    public boolean backspaceCompare(String s, String t) {
        Stack s1 = new Stack();
        Stack s2 = new Stack();
        for(char ch : s.toCharArray()){
            if(ch=='#'){
                s1.remove();
            }else{
                s1.add(ch);
            }
        }
       for(char ch : t.toCharArray()){
            if(ch=='#'){
                s2.remove();
            }else{
                s2.add(ch);
            }
        }
        StringBuilder st1 = new StringBuilder();
        StringBuilder st2 = new StringBuilder();
        while(!s1.isEmpty()){
            st1.append(s1.peek());
            s1.remove();
        }
        while(!s2.isEmpty()){
            st2.append(s2.peek());
            s2.remove();
        }
        return  st1.toString().equals(st2.toString());
    }
}
