class Solution {
    static StringBuilder str;
    public void f(int n, int o, int c, List<String> re, StringBuilder str){
        if(str.length() == 2*n){
            re.add(str.toString());
            return;
        }
        if(o<n){
            str.append('(');
            f(n, o+1, c, re, str);
            str.deleteCharAt(str.length() - 1);
        }
        if(c<o){
            str.append(')');
            f(n, o, c+1, re, str);
            str.deleteCharAt(str.length() - 1);
        }
    }
    public List<String> generateParenthesis(int n) {
        List<String> re = new ArrayList<>();
        int o = 0;
        int c = 0;
        str = new StringBuilder();
        f(n, o, c, re, str);
        return re;
    }
}
