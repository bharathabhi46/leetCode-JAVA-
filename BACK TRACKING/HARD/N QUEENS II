
import java.util.*;

public class NQueens {

    public static boolean isSafe(char board[][], int row, int col) {
        // VERTICALLY
        for (int i = 0; i < board.length; i++) {
            if (board[i][col] == 'Q') {
                return false;
            }
        }
        // HORIZONTALLY
        for (int j = 0; j < board[0].length; j++) {
            if (board[row][j] == 'Q') {
                return false;
            }
        }
        // UPPER LEFT
        for (int r = row, c = col; r >= 0 && c >= 0; r--, c--) {
            if (board[r][c] == 'Q') {
                return false;
            }
        }
        // UPPER RIGHT
        for (int r = row, c = col; r >= 0 && c < board.length; r--, c++) {
            if (board[r][c] == 'Q') {
                return false;
            }
        }
        // LOWER LEFT
        for (int r = row, c = col; r < board.length && c >= 0; r++, c--) {
            if (board[r][c] == 'Q') {
                return false;
            }
        }
        // LOWER RIGHT
        for (int r = row, c = col; r < board.length && c < board.length; r++, c++) {
            if (board[r][c] == 'Q') {
                return false;
            }
        }
        return true;
    }

    public static void saveBoards(char board[][], List<List<String>> allBoards) {
        String row = "";
        List<String> curBoard = new ArrayList<>();
        for (int i = 0; i < board.length; i++) {
            row = "";
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == 'Q') {
                    row += "Q";
                } else {
                    row += ".";
                }
            }
            curBoard.add(row);
        }
        allBoards.add(curBoard);
    }

    public static void helper(char board[][], List<List<String>> allBoards, int col) {
        if (col == board.length) {
            saveBoards(board, allBoards);
            return;
        }
        for (int row = 0; row < board[0].length; row++) {
            if (isSafe(board, row, col)) {
                board[row][col] = 'Q';
                helper(board, allBoards, col + 1);
                board[row][col] = '.';
            }
        }
    }

    public static int solveQueens(int n) {
        List<List<String>> allBoards = new ArrayList<>();
        char board[][] = new char[n][n];
        helper(board, allBoards, 0);
        return allBoards.size();
    }

    public static void main(String args[]) {
        int n = 4;
        System.out.println(solveQueens(n));
    }
}
