class Solution {
    class Pair {
    int num;
    int freq;

    Pair(int num, int freq) {
        this.num = num;
        this.freq = freq;
    }
}
    public int[] frequencySort(int[] nums) {
         Map<Integer, Integer> freqMap = new HashMap<>();
        for (int n : nums) {
            freqMap.put(n, freqMap.getOrDefault(n, 0) + 1);
        }
        List<Pair> list = new ArrayList<>();
        for (Map.Entry<Integer, Integer> e : freqMap.entrySet()) {
            list.add(new Pair(e.getKey(), e.getValue()));
        }

        list.sort((a, b) -> {
            if (a.freq != b.freq)
                return a.freq - b.freq;
            return b.num - a.num;
        });

        List<Integer> result = new ArrayList<>();
        for (Pair p : list) {
            for (int i = 0; i < p.freq; i++) {
                result.add(p.num);
            }
        }

        int[] ans = new int[result.size()];
        for (int i = 0; i < result.size(); i++) ans[i] = result.get(i);
        return ans;
    }
}
