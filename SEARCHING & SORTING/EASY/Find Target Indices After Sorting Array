
class Solution {
    public int firstIndex(int[] nums, int target) {
        int l = 0, h = nums.length - 1, ans = -1;
        while (l <= h) {
            int m = l + (h - l) / 2;
            if (nums[m] == target) {
                ans = m;
                h = m - 1;  
            } else if (nums[m] > target) {
                h = m - 1;
            } else {
                l = m + 1;
            }
        }
        return ans;
    }

    public int lastIndex(int[] nums, int target) {
        int l = 0, h = nums.length - 1, ans = -1;
        while (l <= h) {
            int m = l + (h - l) / 2;
            if (nums[m] == target) {
                ans = m;
                l = m + 1;
            } else if (nums[m] > target) {
                h = m - 1;
            } else {
                l = m + 1;
            }
        }
        return ans;
    }

    public List<Integer> targetIndices(int[] nums, int target) {
        Arrays.sort(nums);
        List<Integer> result = new ArrayList<>();

        int first = firstIndex(nums, target);
        if (first == -1) return result;  

        int last = lastIndex(nums, target);
        for (int i = first; i <= last; i++) {
            result.add(i);
        }
        return result;
    }
}
