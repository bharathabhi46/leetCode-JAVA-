/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public static ListNode rev(ListNode head){
        ListNode prev = null;
        ListNode cur  = head;
        while(cur!=null){
            ListNode nextNode = cur.next;
            cur.next = prev;
            prev = cur;
            cur = nextNode;
        }
        return prev;
    }
    public ListNode removeNodes(ListNode head) {
        if(head==null || head.next==null){
            return head;
        }
        head = rev(head);
        ListNode curNode = head;
        ListNode prevNode = head;
        while(curNode!=null && curNode.next!=null){
            if(curNode.next.val<prevNode.val){
                curNode.next = curNode.next.next;
            }else{
                curNode = curNode.next;
                prevNode = curNode;
            }
        }
        head = rev(head);
        return head;
    }
}
