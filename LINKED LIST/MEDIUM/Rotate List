/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null || k == 0)
            return head;
        int length = 1;
        ListNode temp = head;
        while (temp.next != null) {
            temp = temp.next;
            length++;
        }
        k = k % length;
        if (k == 0)
            return head;
        while (k-- > 0) {
            ListNode secondPrev = head;
            ListNode prevNode = head.next;
            while (prevNode.next != null) {
                secondPrev = secondPrev.next;
                prevNode = prevNode.next;
            }
            secondPrev.next = null;
            prevNode.next = head;
            head = prevNode;
        }
        return head;
    }
}
