/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public static void inOrderTraversal(TreeNode root, List<Integer> re){
        if(root == null){
            return;
        }
        inOrderTraversal(root.left, re);
        re.add(root.val);
        inOrderTraversal(root.right, re);
    }
    public boolean isValidBST(TreeNode root) {
        List<Integer> re = new ArrayList<>();
        inOrderTraversal(root, re);
        boolean valid = true;
        for(int i=0;i<re.size()-1;i++){
            if(re.get(i) >= re.get(i+1)){
                valid = false;
            }
        }
        return valid;
    }
}
