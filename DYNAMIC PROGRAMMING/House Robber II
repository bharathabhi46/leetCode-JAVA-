class Solution {
    public int hb(List<Integer> l){
        int prev1 = l.get(0);
        int prev2 = Math.max(l.get(0), l.get(1));
        for(int i=2;i<l.size();i++){
            int cur = Math.max(prev2, prev1 + l.get(i));
            prev1 = prev2;
            prev2 = cur;
        }
        return prev2;
    }
    public int rob(int[] nums) {
        if(nums.length==1){
            return nums[0];
        }
        if(nums.length==2){
            return Math.max(nums[0], nums[1]);
        }
        List<Integer> l = new ArrayList<>();
        List<Integer> l2 = new ArrayList<>();
        for(int i=0;i<nums.length;i++){
            if(i!=0){
                l.add(nums[i]);
            }
            if(i!=nums.length-1){
                l2.add(nums[i]);
            }
        }
        int s1 = hb(l);
        int s2 = hb(l2);
        return Math.max(s1, s2);
    }
}
